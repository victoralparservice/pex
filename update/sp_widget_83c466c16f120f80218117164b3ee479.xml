<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function($scope,  $uibModal, $rootScope, $location) {
	$rootScope.$broadcast('sp.update.breadcrumbs', $scope.data.breadcrumbs);

	var c = this;

	function alreadyfinished (){
		if(c.data.survey.totalAnswered==$scope.questaoArray.length)
		$scope.exibirFinalizar = true;
	}

	$scope.teste = '';
	$scope.questaoArray = $scope.data.survey.questions;

	alreadyfinished();

	$scope.hasNotConformQuestion = _hasNotConformQuestion(c.data.survey);

	$scope.firstIndex = _getFirstIndex(c.data.survey);

	$scope.selectSituation = function(question, situation, nonConformFormOk, isLastQuestion) {
		question.situation = situation;

		if (situation == 'not_conform') {
			question.notConform.required = true;
			if (question.notConform.due_date && question.notConform.proposition)
				this.saveLastQuestion(nonConformFormOk, isLastQuestion, question);

		} else {
			question.notConform = {
				due_date : '',
				proposition : '',
				responsible_area : '',
				required : false
			};
			this.saveLastQuestion(nonConformFormOk, isLastQuestion, question);
		}
	}

	$scope.startEvaluation = function(survey) {
		survey.state = 'started';
		_udpateSurveyState(survey);
	}

	$scope.completeEvaluation = function(survey, question) {
		//always save the current question before completing the survey
		_updateQuestion(question);

		survey.state = 'completed';
		_udpateSurveyState(survey);
		$scope.hasNotConformQuestion = _hasNotConformQuestion(survey);
		location.reload();
	}

	$scope.redirectAfterCompletedSurvey = function(target) {

		if (target == 'plano_de_acao_pex') {
			var input = {
				action : 'getActionPlan',
				survey : c.data.survey
			};
			c.server.get(input).then(function(response) {
				$location.search({id: target, sys_id: response.data.actionPlan.id});
			});
		} else {
			$location.url("?id=" + target);
		}
	}

	$scope.saveAndNext = function(notConformFormOk, question) {
		if (!notConformFormOk  || !question.situation) return;
		_updateQuestion(question);
	}

	//work-around for change on date field
	$scope.selectDate = function(nonConformFormOk, isLastQuestion, question) {
		this.saveLastQuestion(nonConformFormOk, isLastQuestion, question)
	}

	$scope.saveLastQuestion = function(nonConformFormOk, isLastQuestion, question) {
		if (!isLastQuestion || !question.situation || !nonConformFormOk) return;

		_updateQuestion(question);
		$scope.exibirFinalizar = true;
	}

	$scope.getPDF = function() {
		$location.url('x_alabs_pex_instance_survey.do?PDF&sys_id=' + $scope.data.id);
	}

	$scope.getActionPlan = function() {
		var input = {
			action : 'getActionPlan',
			survey : c.data.survey
		};
		c.server.get(input).then(function(response) {
			$scope.actionTable = response.data.actionPlan.tableName;
      $scope.actionId = response.data.actionPlan.id;
			$location.url($scope.actionTable + '.do?PDF&sys_id=' + $scope.actionId);
		});

	}

	//ANCHOR Update Question
	function _updateQuestion(question) {
		var input = {
			action : "updateQuestion",
			question : question,
			research_type: $scope.data.survey.research_type
		}

		c.server.get(input).then(function(response){
			c.data.survey.totalAnswered = response.data.totalAnswered;
		});
	}

	//ANCHOR Update survey
	function _udpateSurveyState(survey) {
		var input = {
			action : "updateSurveyState",
			survey : survey
		}

		c.server.get(input).then(function(response){
		});
	}

	function _hasNotConformQuestion(survey) {
		return survey.questions.some(function(question) {
			return question.situation == 'not_conform';
		});
	}

	function _getFirstIndex(survey) {
		if (survey.state == 'pending')
			return 0;

		var indexFirstQuestion = survey.questions.findIndex(function(question) {
			return !question.situation;
		});

		if (indexFirstQuestion < 0)
			indexFirstQuestion = 0;

		return indexFirstQuestion || 0;
	}

}
/*
|--------------------------------------------------------------------------
|--------------------------------------------------------------------------
*/]]></client_script>
        <controller_as>c</controller_as>
        <css>.introduction, .end-notes{
	.card{
  	padding:30px;
    
    h4{
    	margin-top: 0px;
      margin-bottom: 30px;
    }
    
  }
}

.prazo{
     width: 30em;
    height: 2.3em;
}

.separete{
	  font-size: 6px !important;
    vertical-align: middle;
    margin: 0px 10px;
}

.btn-azul {
  background-color: #023a69;
  color: #fff;
  margin-top: 30px;
  
  &amp;:hover{
  	background-color: #4a7091;
  }
}

.slide-content{
 margin-top: 10px;
}

.number-question{
	margin-top: 0px;
}

.form-card{
	display: -webkit-flexbox;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  -webkit-flex-align: center;
  -ms-flex-align: center;
  -webkit-align-items: center;
  align-items: center;
  height: 100%;
  padding-bottom: 20px;
}

.btn-description{
	margin-top: -44px;
  background: #023a69;
  border-color: #023a69;
}

.btn-finished{
	margin-right: 55px;
  margin-top: -44px;
}

.arrow{
  cursor: not-allowed;
  font-size: 50px;
  color: #bdc0c4;
 }

.arrow-active{
  cursor: pointer;
  font-size: 50px;
	color: #023a69;
}

.card{
  padding:30px;
  //padding-bottom: 15px;
  background-color: #fff;
 	box-shadow: 2px 2px 2px 2px rgba(0, 0, 0, 0.21);
  
  @media (min-device-width: 320px) and (max-device-width: 480px) {
    padding:25px;
  }
}

.card-circle{
	border-radius: 50%;
  height: 160px;
  padding: 15px;
  width: 160px;
  
 @media (min-device-width: 320px) and (max-device-width: 480px) {
  		border-radius: 50%;
  		height: 100px;
  		padding: 10px;
  		width: 100px;
  }
   
}

p.icon {
    font-size: 65px;
  	color: #fff;
  	margin-bottom: -7px;
  @media (min-device-width: 320px) and (max-device-width: 480px) {
  	font-size:40px;  
  }
}

p.action-text {
    font-size: 20px;
  	color: #fff;
  
  	@media (min-device-width: 320px) and (max-device-width: 480px) {
  		font-size:12px;  
  	}
}

.icon-like-active {
	background-color: #5cb85c;
}

.icon-like{
  background-color: #bdc0c4;
  
  &amp;:hover{    
  	background-color: #5cb85c;
  }
}

.icon-unlike-active{
  background-color: #d9534f;
}

.icon-unlike{
  background-color: #bdc0c4;
  
  &amp;:hover{    
  	background-color: #d9534f;
  }  
}

.icon-null-active{
  background-color: #14b5ec;
}

.icon-null{
  background-color: #bdc0c4;
  
  &amp;:hover{    
  	background-color: #14b5ec;
  } 
}

.not-in{
	margin-top: 20px;
}

.question{
  
  h4 {
      margin: 0px;
      margin-bottom: 5px;
  }
}

.center{
    display: flex;
    justify-content: center;
}

.form-group.required .control-label:after {
  content:"*";
  font-size: 20px;
  color:red;
}



</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id/>
        <internal>false</internal>
        <link/>
        <name>PEX - Formulário de Avaliação</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
	
	data.id = $sp.getParameter('sys_id');
	
	if(input) {
		if (input.action == "updateSurveyState") {
			var grSurvey = new GlideRecord('x_alabs_pex_instance_survey');
			grSurvey.get(input.survey.id);		
			grSurvey.state = input.survey.state;
			grSurvey.update();
			
		} else if (input.action == "updateQuestion") {
			var question = input.question;
			var grQuestion = new GlideRecord('x_alabs_pex_instance_survey_question');
			grQuestion.get(question.id);		
			grQuestion.situation = question.situation;
			grQuestion.proposition = question.notConform.proposition;	
			if(input.research_type != 'vertical')
			grQuestion.responsible_area = question.notConform.responsible_area;
			else
				grQuestion.responsible_area = 'my_area';
			
			//gs.addInfoMessage(question.notConform.du_ate);			
			var dueDate = new GlideDate();
			
		 
				//2018-10-17T03:00:00.000Z
			
			var due_date_formatted = question.notConform.due_date.split("T");
			dueDate.setValue(due_date_formatted[0]);
			grQuestion.due_date = dueDate;
			grQuestion.update();
			 
			var survey = new GlideRecord("x_alabs_pex_instance_survey");
			if (survey.get(grQuestion.survey_instance.sys_id))
				data.totalAnswered = survey.number_of_questions_answered.getDisplayValue();
			return data;
			
		} else if (input.action == "getActionPlan") {
			var grActionPlan = new GlideRecord("x_alabs_pex_action_plan");
			grActionPlan.addQuery("survey_instance", input.survey.id);
			grActionPlan.addQuery("state", "!=", "canceled");
			grActionPlan.setLimit(1);
			grActionPlan.query();
			if (grActionPlan.next()) {
				data.actionPlan = {
					id : grActionPlan.getUniqueValue(),
					tableName: grActionPlan.getTableName()
				};
			}
		}
		return;			
	}
	
	//PAGE LOADING	
	//BREADCRUMBS
	data.breadcrumbs = [];
	data.breadcrumbs.push({label: gs.getMessage('Programa de Excelência'), url: '/sp?id=index_pex'});
	data.breadcrumbs.push({label: gs.getMessage('Avaliações'), url: '/sp?id=avaliacoes_pex'});
	data.breadcrumbs.push({label: gs.getMessage('Avaliação'), url: '#'});
	
	//get instance state
	var grSurvey = new GlideRecordSecure('x_alabs_pex_instance_survey')
	//grSurvey.get($sp.getParameter('sys_id'));
	grSurvey.addQuery('sys_id', $sp.getParameter('sys_id'));
	grSurvey.addQuery('responsible', gs.getUserID());
	grSurvey.query();
	
	if (!grSurvey.hasNext()) {
		gs.addErrorMessage("Você não tem permissão para acessar esta pesquisa.");
		return;
	} else {
		grSurvey.next();
	}
	
	var survey = {
		id : grSurvey.getValue("sys_id"),
		state : grSurvey.getValue("state"),
		totalAnswered : grSurvey.number_of_questions_answered.getDisplayValue(),
		title : grSurvey.survey.name.getDisplayValue(), 
		type : grSurvey.survey.type.getDisplayValue(),
		research_type: grSurvey.survey.tipo_de_pesquisa.toString(),
		introduction : grSurvey.survey.introduction.getDisplayValue(),
		endNotes : grSurvey.survey.end_note.getDisplayValue(),
		questions : []
	}
	
	var grQuestion = new GlideRecord('x_alabs_pex_instance_survey_question');
	grQuestion.addEncodedQuery('survey_instance=' + survey.id);
	grQuestion.orderBy('order');
	grQuestion.query();
		
	while(grQuestion.next()){
		var question = {};
		question.questions = {};
		question.questions.question = grQuestion.question.question.getDisplayValue();
		question.questions.situation = grQuestion.situation.getDisplayValue();
		question.id = grQuestion.getValue("sys_id");
		question.question = grQuestion.question.question.getDisplayValue();
		question.description = grQuestion.question.description.getDisplayValue();
		question.category = grQuestion.question.category.getDisplayValue();
		question.applicabilities = grQuestion.question.applicabilities.getDisplayValue();
		question.item = grQuestion.question.item.getDisplayValue();
		question.subitem = grQuestion.question.subitem.getDisplayValue();
		question.situation = grQuestion.getValue("situation");
		question.notConform = {};
		question.notConform.due_date = grQuestion.due_date.getDisplayValue();
		question.notConform.proposition = grQuestion.proposition.getDisplayValue();	
		question.notConform.responsible_area = grQuestion.getValue("responsible_area");
	  question.notConform.required = question.situation == 'not_conform' ? true : false;
		survey.questions.push(question);
	}
	
	var responsibleAreas = [];
	var grResponsibleArea = new GlideRecord("sys_choice");
	grResponsibleArea.addQuery("language", gs.getSession().getLanguage());
	grResponsibleArea.addEncodedQuery("nameSTARTSWITHx_alabs_pex_instance_survey_question^element=responsible_area");
	grResponsibleArea.query();
	while (grResponsibleArea.next()) {
		var responsibleArea = {
			label : grResponsibleArea.label.getDisplayValue(),
			value : grResponsibleArea.value.getDisplayValue()
		};
		responsibleAreas.push(responsibleArea);
	}
	
	data.totalAnsweredQuestions = grSurvey.number_of_questions_answered.getDisplayValue();
	data.status = grSurvey.state.value;
	data.responsibleAreas = responsibleAreas;
	data.survey = survey;
	
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>victor.leite</sys_created_by>
        <sys_created_on>2017-11-06 13:09:03</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>83c466c16f120f80218117164b3ee479</sys_id>
        <sys_mod_count>1160</sys_mod_count>
        <sys_name>PEX - Formulário de Avaliação</sys_name>
        <sys_package display_value="PEX" source="x_alabs_pex">4a94483c6f0a8f841fb18a6d6b3ee494</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="PEX">4a94483c6f0a8f841fb18a6d6b3ee494</sys_scope>
        <sys_update_name>sp_widget_83c466c16f120f80218117164b3ee479</sys_update_name>
        <sys_updated_by>alpar.egomes</sys_updated_by>
        <sys_updated_on>2019-06-17 14:31:12</sys_updated_on>
        <template><![CDATA[<!-- INICIO INTRODUÇÃO -->
<div class="introduction" ng-if="data.survey.state == 'pending'">
  <div class="row">
    <div class="col-md-offset-1 col-md-10">
      <div class="card">
        <div class="row">
          <div class="col-md-12">
            <h1 class="text-center">{{data.survey.name}}</h1>
            <h4 class="text-center"><span>{{data.survey.type}}</span> | <span>Quantidade de questões: {{data.survey.questions.length}}</span></h4>
          </div>
        </div>
        <div class="row">
          <div class="col-md-12 text-center">
            <p data-ng-bind-html="data.survey.introduction">
            </p>
          </div>
        </div>
        <div class="row">
          <div class="col-md-12 text-center">
            <a class="btn btn-default btn-azul btn-lg" ng-click="startEvaluation(data.survey)">${Iniciar}</a>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
<!-- FIM INTRODUÇÃO -->
<div ng-if="data.survey.state=='finished'">
  <h3>
    Esta pesquisa não se encontra mais disponível.
  </h3> 
</div>
<!-- INICIO CAROUSEL -->
<div id="myCarousel" class="carousel slide" data-ride="carousel" data-interval="false" ng-if="data.survey.state=='started'">
  <div class="carousel-inner">
    <slide ng-repeat="question in data.survey.questions" active='{{$index==firstIndex}}' class="item" ng-class="{active:$index==firstIndex}">
      <div class="question">
        <div class="slide-content">
          <div class="row">
            <div class="col-md-offset-1 col-md-10">
              <h2 class="number-question text-center">{{$index + 1}} / {{data.survey.questions.length}}</h2>

              <button type="button" class="btn btn-primary pull-right btn-description" data-toggle="modal" data-target="#modalDescription{{$index}}"><i class="fa fa-info-circle"></i></button>
              <a ng-disabled="!notConformForm.$valid" ng-if="exibirFinalizar && data.survey.totalAnswered==data.survey.questions.length" class="btn btn-success pull-right btn-finished" ng-click="completeEvaluation(data.survey, question)"><i class="fa fa-check" aria-hidden="true"></i> Finalizar</a>
            </div>
          </div>
          <div class="row form-card">
            <div class="col-md-1">
              <div ng-if="!$first" class="arrow arrow-active pull-right" href="#myCarousel" data-slide="prev">
                <i class="fa fa-arrow-left"></i>
              </div>
            </div>
            <div class="col-md-10">
              <div class="card">
                <div class="row">
                  <div class="col-md-12">
                    <div class="question">
                      <p><strong>Pilar:</strong> {{question.category}}<strong class="separete"><i class="fa fa-circle"></i></strong><strong>Item:</strong> {{question.item}}<strong class="separete"><i class="fa fa-circle"></i></strong><strong>Subitem:</strong> {{question.subitem}}<strong class="separete"><i class="fa fa-circle"></i></strong><strong>Aplicabilidade:</strong> {{question.applicabilities}}</p>
                      <h4><strong>${Pergunta}</strong></h4>
                      <p>{{question.question}}</p>
                    </div>
                  </div>
                </div>
                <div class="row">
                  <div class="col-md-4">
                    <div class="center">
                      <div class="card-circle text-center" ng-class="question.situation=='according'?'icon-like-active':'icon-like'" ng-click="selectSituation(question, 'according', notConformForm.$valid, $last)">
                        <p class="icon"><i class="fa fa-thumbs-o-up"></i></p>
                        <p class="action-text">${Conforme}</p>
                      </div>
                    </div>
                  </div>
                  <div class="col-md-4">
                    <div class="center">
                      <div class="card-circle text-center" ng-class="question.situation=='not_conform'?'icon-unlike-active':'icon-unlike'" ng-click="selectSituation(question, 'not_conform', notConformForm.$valid, $last)">
                        <p class="icon"><i class="fa fa-thumbs-o-down"></i></p>
                        <p class="action-text">${Não conforme}</p>
                      </div>
                    </div>
                  </div>
                  <div class="col-md-4">
                    <div class="center">
                      <div class="card-circle text-center" ng-class="question.situation=='not_applicable'?'icon-null-active':'icon-null'" ng-click="selectSituation(question, 'not_applicable', notConformForm.$valid, $last)">
                        <p class="icon"><i class="fa fa-times"></i></p>
                        <p class="action-text">${Não se aplica}</p>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div class="col-md-1">
              <div ng-class="question.situation&&notConformForm.$valid?'arrow-active':'arrow'" ng-if="!$last"  href="{{question.situation&&notConformForm.$valid?'#myCarousel':''}}" data-slide="next" ng-click="saveAndNext(notConformForm.$valid,question)">
                <i class="fa fa-arrow-right"></i>
              </div>
            </div>
          </div>
          <!-- FIM ROW -->
        </div>
        <!-- Fim do slide-->
        <!-- INICIO NÃO CONFORME -->
        <!--  <form name="notConformForm">
<div class="row not-in" ng-if="question.situation=='not_conform'">
<div class="col-md-offset-1 col-md-10">
<div class="row">
<div class="col-md-6">
<div class="form-group required">
<label class="control-label" for="due_date">Prazo</label>
<sp-date-picker name="due_date" id="due_date" ng-model="question.notConform.due_date" ng-required='question.notConform.required' ng-change="selectDate(notConformForm.$valid, $last, question)"></sp-date-picker>
</div>
</div>
<div class="col-md-6">
<div class="form-group required">
<label class="control-label" for="responsible_area">Área Responsável</label>
<select class="form-control" name="responsible_area" ng-options="responsibleArea.value as responsibleArea.label for responsibleArea in data.responsibleAreas" ng-required='question.notConform.required' ng-model="question.notConform.responsible_area" ng-change="selectDate(notConformForm.$valid, $last, question)">
<option value="">Selecione a área responsável...</option>
</select>
</div>
</div>
</div>

<div class="row">
<div class="col-md-12">
<div class="form-group required">
<label class="control-label" for="proposition">O que você pretende fazer para melhorar?</label>
<textarea name="proposition" id="proposition" class="form-control" rows="3" ng-model="question.notConform.proposition"  ng-required='question.notConform.required' ng-blur="saveLastQuestion(notConformForm.$valid, $last, question)"></textarea>
</div>
</div>
</div>
</div>
</div>
</form> -->

        <form name="notConformForm">
          <div class="row not-in" ng-if="question.situation=='not_conform'">
            <div class="col-md-offset-1 col-md-10">
              <div class="row">
                <div class="col-md-6">
                  <div class="form-group required" ng-if="data.survey.research_type != 'vertical'">
                    <label class="control-label" for="due_date">Prazo</label>
                    <input class='prazo' type="date"  name="due_date" id="due_date" ng-model="question.notConform.due_date" ng-required='question.notConform.required' ng-change="selectDate(notConformForm.$valid, $last, question)">
                  	
                    {{due_date}}
                    
                  </div>
                </div>
                <div class="col-md-6">
                  <div class="form-group required" ng-if="data.survey.research_type != 'vertical'">
                    <label class="control-label" for="responsible_area">Área Responsável</label>
                    <select class="form-control" name="responsible_area" ng-options="responsibleArea.value as responsibleArea.label for responsibleArea in data.responsibleAreas" ng-required='question.notConform.required' ng-model="question.notConform.responsible_area" ng-change="selectDate(notConformForm.$valid, $last, question)">
                      <option value="">Selecione a área responsável...</option>
                    </select>
                  </div>
                </div>
              </div>

              <div class="row">
                <div class="col-md-12">
                  <div class="form-group required">
                    <label class="control-label" for="proposition">O que você pretende fazer para melhorar?</label>
                    <textarea name="proposition" id="proposition" class="form-control" rows="3" ng-model="question.notConform.proposition"  ng-required='question.notConform.required' ng-blur="saveLastQuestion(notConformForm.$valid, $last, question)"></textarea>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </form> 
        <!-- FIM NÃO CONFORME -->
      </div>
      <!-- FIM INTRODUÇÃO -->

      <!-- INICIO MODAL DESCRICAO -->
      <div class="modal fade" tabindex="-1" role="menu" tabindex="-1" data-backdrop="false" id="modalDescription{{$index}}" aria-labelledby="myModalLabel">
        <div class="modal-dialog" role="document">
          <div class="modal-content">
            <div class="modal-header">
              <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
              <h4 class="modal-title" id="myModalLabel">${Description}</h4>
            </div>
            <div class="modal-body">
              <div data-ng-bind-html="question.description"></div>
            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-danger" data-dismiss="modal">${Close}</button>
            </div>
          </div>
        </div>
      </div>
      <!-- FIM MODAL DESCRICAO -->

    </slide>
    <!-- FIM REPEAT -->
  </div>
  <!-- FIM CAROUSEL INNER -->
</div>
<!-- FIM CAROUSEL -->

<!-- INICIO NOTAS -->
<div class="end-notes" ng-if="data.survey.state == 'completed'">
  <div class="row">
    <div class="col-md-offset-1 col-md-10">
      <div class="card">
        <div class="row">
          <div class="col-md-12" ng-if="data.survey.endNotes">
            <h3 class="text-center">Notas de finalização</h3>
          </div>
        </div>
        <div class="row">
          <div class="col-md-12 text-center">
            <p data-ng-bind-html="data.survey.endNotes">
            </p>
          </div>
        </div>
        <!-- Questões Respondidas -->
        <div class="row">
          <div class="col-md-12" ng-if="questaoArray">
            <h3 class="text-center">Revisão</h3>
          </div><br><br><br><br>
        </div>
        <div class="row">
          <div class="col-md-12">
            <span ng-repeat="qst in questaoArray">
              <ul>
                <li>{{qst.questions.question}}</li>
                <strong>Resposta:</strong> {{qst.questions.situation}}
              </ul>
            </span>
          </div>
        </div>
        <!-- -->
        <br/><br/>
        <div class="row">
          <div class="col-md-12 text-center">
            <a ng-disabled="!hasNotConformQuestion" style="float: left" class="btn btn-primary" ng-click="redirectAfterCompletedSurvey('plano_de_acao_pex')">${Plano de ação}</a>
            <!--a class="btn btn-default" ng-click="redirectAfterCompletedSurvey('avaliacoes_pex')">${Lista de avaliações}</a-->
            <a class="btn btn-danger" style="float: left; margin:0px 0px 7px 7px" ng-click="redirectAfterCompletedSurvey('index_pex')">${Fechar}</a>
            <a class="btn btn-warning" ng-click="getPDF()" style="float: right; margin:0px 0px 7px 7px"><span class="glyphicon glyphicon-print" style="margin-right: 7px"></span>${Questões}</a>
            <a ng-disabled="!hasNotConformQuestion" class="btn btn-warning" ng-click="getActionPlan()" style="float: right"><span class="glyphicon glyphicon-print" style="margin-right: 7px"></span>${Plano de Ação}</a> 
          </div>
        </div>
      </div>
    </div>
  </div>
</div>]]></template>
    </sp_widget>
</record_update>
