<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_alabs_pex_instance_survey</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_alabs_pex_instance_survey">stateCHANGESTOcanceled^NQstateCHANGESFROMcompleted^stateCHANGESTOfinished^EQ<item endquery="false" field="state" goto="false" newquery="false" operator="CHANGESTO" or="false" value="canceled"/>
            <item endquery="false" field="state" goto="false" newquery="true" operator="CHANGESFROM" or="false" value="completed"/>
            <item endquery="false" field="state" goto="false" newquery="false" operator="CHANGESTO" or="false" value="finished"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>ALP: To Cancel Action Plans</name>
        <order>200</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
	
	//Consider moving this to a BR
	var grActionPlan = new GlideRecord("x_alabs_pex_action_plan");
	grActionPlan.addQuery("survey_instance", current.sys_id);
	grActionPlan.addEncodedQuery("stateINpending,completed");
	grActionPlan.query();
	while (grActionPlan.next()) {
		grActionPlan.state = 'canceled';
		//grActionPlan.notes.setJournalEntry("Plano de ação cancelado por motivo de reabertura da avaliação");
		if (current.state == 'finished')
			grActionPlan.notes = "Plano de ação cancelado por motivo de reabertura da avaliação";
		grActionPlan.update();
		
		//Cancel all actions
		var grAction = new GlideRecord("x_alabs_pex_action_plan_action");
		grAction.addQuery("action_plan", grActionPlan.sys_id);
		grAction.query();
		while (action.next()) {
			grAction.state = 'canceled';
			grAction.update();
		}
	}
	
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>eli.lima</sys_created_by>
        <sys_created_on>2017-11-13 13:31:52</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>474ce2576f1a0700218117164b3ee471</sys_id>
        <sys_mod_count>5</sys_mod_count>
        <sys_name>ALP: To Cancel Action Plans</sys_name>
        <sys_overrides/>
        <sys_package display_value="PEX" source="x_alabs_pex">4a94483c6f0a8f841fb18a6d6b3ee494</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="PEX">4a94483c6f0a8f841fb18a6d6b3ee494</sys_scope>
        <sys_update_name>sys_script_474ce2576f1a0700218117164b3ee471</sys_update_name>
        <sys_updated_by>yuhri.bernardes</sys_updated_by>
        <sys_updated_on>2019-02-05 10:36:34</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=474ce2576f1a0700218117164b3ee471"/>
</record_update>
