<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_alabs_pex_instance_survey</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_alabs_pex_instance_survey">stateCHANGESTOcompleted^EQ<item endquery="false" field="state" goto="false" newquery="false" operator="CHANGESTO" or="false" value="completed"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>ALP: On Complete</name>
        <order>200</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

	var question = new GlideRecord("x_alabs_pex_instance_survey_question");
	question.addQuery("survey_instance", current.sys_id);
	question.addQuery("situation", "not_conform");
	question.query();
	
	if (question.hasNext()) {
		//Create Action Plan
		var actionPlan = new GlideRecord("x_alabs_pex_action_plan");
		actionPlan.initialize();
		actionPlan.survey_instance = current.sys_id;
		actionPlan.responsible = current.responsible;
		actionPlan.insert();
		
		//create action
		while (question.next()) {
			var action = new GlideRecord("x_alabs_pex_action_plan_action");
			action.initialize();
			action.question_instance = question.sys_id;
			action.action_plan = actionPlan.sys_id;
			action.insert();
		}
	}

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>eli.lima</sys_created_by>
        <sys_created_on>2017-11-10 18:39:00</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>330618226f9a8300218117164b3ee472</sys_id>
        <sys_mod_count>7</sys_mod_count>
        <sys_name>ALP: On Complete</sys_name>
        <sys_overrides/>
        <sys_package display_value="PEX" source="x_alabs_pex">4a94483c6f0a8f841fb18a6d6b3ee494</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="PEX">4a94483c6f0a8f841fb18a6d6b3ee494</sys_scope>
        <sys_update_name>sys_script_330618226f9a8300218117164b3ee472</sys_update_name>
        <sys_updated_by>yuhri.bernardes</sys_updated_by>
        <sys_updated_on>2019-02-05 10:37:09</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=330618226f9a8300218117164b3ee472"/>
    <sys_translated_text action="INSERT_OR_UPDATE">
        <documentkey>330618226f9a8300218117164b3ee472</documentkey>
        <fieldname>message</fieldname>
        <language>pb</language>
        <sys_created_by>eli.lima</sys_created_by>
        <sys_created_on>2017-11-13 13:16:43</sys_created_on>
        <sys_id>e3a92e936f1a0700218117164b3ee4e8</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>eli.lima</sys_updated_by>
        <sys_updated_on>2017-11-13 13:16:43</sys_updated_on>
        <tablename>sys_script</tablename>
        <value/>
    </sys_translated_text>
</record_update>
